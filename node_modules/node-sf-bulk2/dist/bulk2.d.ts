import { Connection } from "./model/connection";
import { AxiosResponse } from 'axios';
import { BulkQueryResponse } from './model/queryResponse';
import { QueryInput } from './model/queryInput';
import { BulkJobInfoResponse } from "./model/bulkJobInfoResponse";
import { AllBulkQueryJobsInfoResponse } from "./model/allBulkQueryJobsInfoResponse";
import { BulkQueryConfig } from './model/bulkQueryConfig';
import { JobUploadRequest } from './model/jobUploadRequest';
import { JobUploadResponse } from './model/jobUploadResponse';
import { JobInfoResponse } from './model/jobInfoResponse';
import { RESULTTYPE } from './model/enum';
export default class BulkAPI2 {
    private connection;
    private endpoint;
    constructor(connection: Connection);
    private getRequestConfig;
    submitBulkQueryJob(query: QueryInput): Promise<BulkQueryResponse>;
    getBulkQueryJobInfo(jobId: string): Promise<BulkJobInfoResponse>;
    getAllBulkQueryJobInfo(configInput?: BulkQueryConfig): Promise<AllBulkQueryJobsInfoResponse>;
    abortBulkQueryJob(jobId: string): Promise<BulkQueryResponse>;
    getBulkQueryResults(jobId: string, locator?: string, maxRecords?: number): Promise<AxiosResponse>;
    createDataUploadJob(jobUploadRequest: JobUploadRequest): Promise<JobUploadResponse>;
    uploadJobData(contenturl: string, data: string): Promise<number>;
    closeOrAbortJob(jobId: string, state: string): Promise<JobUploadResponse>;
    getIngestJobInfo(jobId: string): Promise<JobInfoResponse>;
    getResults(jobId: string, resulttype: RESULTTYPE): Promise<string>;
}
